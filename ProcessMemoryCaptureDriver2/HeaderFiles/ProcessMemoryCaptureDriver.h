#ifndef _PROCESS_MEMORY_CAPTURE_DRIVER_H_
#define _PROCESS_MEMORY_CAPTURE_DRIVER_H_

#include <ntddk.h>
#include "UsbDriver.h"

#define IOCTL_CAPTURE_MEMORY CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_SEND_DATA_OVER_USB CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)

typedef struct _DEVICE_EXTENSION {
    PDEVICE_OBJECT DeviceObject;
    WDFUSBDEVICE UsbDevice;
    WDFUSBPIPE BulkReadPipe;
    WDFUSBPIPE BulkWritePipe;
} DEVICE_EXTENSION, * PDEVICE_EXTENSION;

NTSTATUS DriverEntry(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath);
void DriverUnload(PDRIVER_OBJECT DriverObject);
NTSTATUS DriverDeviceControl(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS CaptureProcessMemory(PDEVICE_OBJECT DeviceObject, PIRP Irp);

#endif
